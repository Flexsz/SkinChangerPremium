--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.4) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==5) then v27=v24;v28=nil;function v28(...) return {...},v12("#",...);end v18=6;end if (v18==1) then v21=nil;function v21(v31,v32,v33) if v33 then local v83=0 -0 ;local v84;while true do if ((0 -0)==v83) then v84=(v31/((3 -1)^(v32-(2 -1))))%((621 -(555 + 64))^(((v33-(932 -((2494 -(1523 + 114)) + 74))) -(v32-(569 -(367 + 201)))) + (928 -(214 + 641 + 72)))) ;return v84-(v84%(1 + 0)) ;end end else local v85=2^(v32-((1 -0) + 0)) ;return (((v31%(v85 + v85))>=v85) and 1) or (877 -(282 + 595)) ;end end v22=nil;v18=2;end if (v18==3) then v24=nil;function v24() local v34=1065 -(68 + 997) ;local v35;local v36;local v37;local v38;while true do if (v34==(1270 -(226 + 1044))) then v35,v36,v37,v38=v1(v16,v19,v19 + (12 -9) );v19=v19 + (121 -(32 + 85)) ;v34=1 + 0 ;end if (v34==((1 -0) + 0)) then return (v38 * ((30801872 -14023699) -((1242 -(87 + 263)) + 65))) + (v37 * 65536) + (v36 * (610 -354)) + v35 ;end end end v25=nil;v18=4;end if (v18==6) then v29=nil;function v29() local v39=0 -0 ;local v40;local v41;local v42;local v43;local v44;local v45;local v46;local v47;while true do if (v39~=4) then else while true do if (v40==(2 -0)) then local v102=0;while true do if (v102==(2 -1)) then v40=2 + 1 ;break;end if (v102~=(0 + 0)) then else v45=nil;v46=nil;v102=397 -(115 + 281) ;end end end if (v40~=3) then else v47=nil;while true do local v106=0;local v107;while true do if (v106==(0 -0)) then v107=0;while true do if (v107~=(0 + 0)) then else local v109=0;while true do if (v109==(0 -0)) then if (v41~=(10 -7)) then else local v236=867 -(550 + 317) ;local v237;while true do if (v236~=0) then else v237=0 -0 ;while true do if (v237~=0) then else local v309=0 -0 ;local v310;while true do if (v309==0) then v310=0 -0 ;while true do if (v310==(285 -(134 + 151))) then local v324=0;while true do if ((1665 -(970 + 695))==v324) then for v330=1,v24() do v43[v330-(1 -0) ]=v29();end return v45;end end end end break;end end end end break;end end end if (2~=v41) then else local v238=0;local v239;while true do if (v238==0) then v239=0;while true do if (v239==1) then for v314=1991 -(582 + 1408) ,v24() do local v315=0;local v316;local v317;while true do if ((0 -0)==v315) then v316=0;v317=nil;v315=1 -0 ;end if (v315~=(3 -2)) then else while true do if (0==v316) then v317=v22();if (v21(v317,1825 -(1195 + 629) ,1 -0 )==(241 -(187 + 54))) then local v325=780 -(162 + 618) ;local v326;local v327;local v328;local v329;while true do if (v325==0) then v326=0;v327=nil;v325=1;end if ((1 + 0)==v325) then v328=nil;v329=nil;v325=2;end if (v325==2) then while true do if (v326==(0 + 0)) then v327=v21(v317,3 -1 ,4 -1 );v328=v21(v317,4,1 + 5 );v326=1637 -(1373 + 263) ;end if (v326==2) then local v332=1000 -(451 + 549) ;while true do if (v332~=(0 + 0)) then else if (v21(v328,1 -0 ,1 -0 )~=1) then else v329[1386 -(746 + 638) ]=v47[v329[1 + 1 ]];end if (v21(v328,2,2)~=1) then else v329[4 -1 ]=v47[v329[344 -(218 + 123) ]];end v332=1582 -(1535 + 46) ;end if (v332~=(1 + 0)) then else v326=1 + 2 ;break;end end end if (3~=v326) then else if (v21(v328,3,563 -(306 + 254) )==1) then v329[1 + 3 ]=v47[v329[7 -3 ]];end v42[v314]=v329;break;end if (v326==(1468 -(899 + 568))) then local v334=0 + 0 ;while true do if (v334==1) then v326=2;break;end if (v334~=(0 -0)) then else v329={v23(),v23(),nil,nil};if (v327==(572 -(426 + 146))) then local v341=0 + 0 ;local v342;while true do if (v341==0) then v342=1456 -(282 + 1174) ;while true do if (v342==0) then v329[3]=v23();v329[4]=v23();break;end end break;end end elseif (v327==1) then v329[3]=v24();elseif (v327==2) then v329[3]=v24() -((813 -(569 + 242))^(46 -30)) ;elseif (v327==(1 + 2)) then local v347=1024 -(706 + 318) ;local v348;local v349;while true do if ((1251 -(721 + 530))~=v347) then else v348=0;v349=nil;v347=1272 -(945 + 326) ;end if (v347==(2 -1)) then while true do if (v348==(0 + 0)) then v349=700 -(271 + 429) ;while true do if (v349~=(0 + 0)) then else v329[1503 -(1408 + 92) ]=v24() -(2^(1102 -(461 + 625))) ;v329[1292 -(993 + 295) ]=v23();break;end end break;end end break;end end end v334=1 + 0 ;end end end end break;end end end break;end end break;end end end v41=3;break;end if (v239~=0) then else for v318=1,v46 do local v319=1171 -(418 + 753) ;local v320;local v321;while true do if (v319~=1) then else if (v320==1) then v321=v22()~=0 ;elseif (v320==(1 + 1)) then v321=v25();elseif (v320==(1 + 2)) then v321=v26();end v47[v318]=v321;break;end if (v319==(0 + 0)) then local v323=0 + 0 ;while true do if (1~=v323) then else v319=530 -(406 + 123) ;break;end if (v323~=0) then else v320=v22();v321=nil;v323=1770 -(1749 + 20) ;end end end end end v45[1 + 2 ]=v22();v239=1323 -(1249 + 73) ;end end break;end end end v109=1 + 0 ;end if (v109==1) then v107=1;break;end end end if (1==v107) then if (v41==(1146 -(466 + 679))) then local v110=0 -0 ;while true do if (1==v110) then v47={};v41=2;break;end if (v110==(0 -0)) then local v240=0;while true do if (v240~=(1900 -(106 + 1794))) then else local v295=0;while true do if (v295==1) then v240=1 + 0 ;break;end if (v295==(0 + 0)) then v45={v42,v43,nil,v44};v46=v24();v295=1;end end end if ((115 -(4 + 110))==v240) then v110=585 -(57 + 527) ;break;end end end end end if (v41~=0) then else local v111=0;while true do if (v111~=0) then else local v241=1427 -(41 + 1386) ;while true do if (v241~=0) then else v42={};v43={};v241=104 -(17 + 86) ;end if (v241==(1 + 0)) then v111=1;break;end end end if (v111==(1 -0)) then v44={};v41=2 -1 ;break;end end end break;end end break;end end end break;end if (v40~=0) then else local v103=0;while true do if (v103==0) then v41=0;v42=nil;v103=167 -(122 + 44) ;end if (v103==1) then v40=1 -0 ;break;end end end if (v40==1) then local v104=0;local v105;while true do if (0==v104) then v105=0 -0 ;while true do if (v105~=0) then else local v108=0;while true do if (v108==(1 + 0)) then v105=1 + 0 ;break;end if (v108==(0 -0)) then v43=nil;v44=nil;v108=66 -(30 + 35) ;end end end if (v105==(1 + 0)) then v40=2;break;end end break;end end end end break;end if (v39==(1259 -(1043 + 214))) then local v90=0 -0 ;while true do if (v90~=1) then else v39=1215 -(323 + 889) ;break;end if (v90~=(0 -0)) then else v44=nil;v45=nil;v90=581 -(361 + 219) ;end end end if (v39==3) then local v91=320 -(53 + 267) ;while true do if (v91==1) then v39=1 + 3 ;break;end if (v91==0) then v46=nil;v47=nil;v91=414 -(15 + 398) ;end end end if (v39~=(982 -(18 + 964))) then else local v92=0;while true do if (1==v92) then v39=1;break;end if (v92==0) then v40=0;v41=nil;v92=3 -2 ;end end end if (v39==1) then local v93=0;while true do if (v93==(0 + 0)) then v42=nil;v43=nil;v93=1;end if (v93==(1 + 0)) then v39=2;break;end end end end end v30=nil;v18=7;end if (v18==4) then function v25() local v48=v24();local v49=v24();local v50=851 -(20 + 830) ;local v51=(v21(v49,1 + 0 ,146 -(116 + 10) ) * ((1 + (1 -0))^(770 -(542 + 196)))) + v48 ;local v52=v21(v49,21,31);local v53=((v21(v49,32)==(1 -0)) and  -1) or (1 + 0 + 0) ;if (v52==(0 + 0 + 0)) then if (v51==(0 + 0)) then return v53 * (0 -0) ;else v52=2 -1 ;v50=0;end elseif (v52==(3598 -(1126 + 425))) then return ((v51==(405 -(118 + 287))) and (v53 * ((3 -2)/(1121 -(118 + 1003))))) or (v53 * NaN) ;end return v8(v53,v52-(2993 -1970) ) * (v50 + (v51/((379 -(142 + 235))^((1212 -(553 + 424)) -183)))) ;end v26=nil;function v26(v54) local v55;if  not v54 then local v86=0 + 0 ;while true do if (0==v86) then v54=v24();if (v54==(0 + 0)) then return "";end break;end end end v55=v3(v16,v19,(v19 + v54) -((2 -1) + 0) );v19=v19 + v54 ;local v56={};for v67=1 + 0 , #v55 do v56[v67]=v2(v1(v3(v55,v67,v67)));end return v6(v56);end v18=5;end if (v18==2) then function v22() local v57=v1(v16,v19,v19);v19=v19 + 1 ;return v57;end v23=nil;function v23() local v58,v59=v1(v16,v19,v19 + (5 -3) );v19=v19 + (4 -2) ;return (v59 * (75 + 181)) + v58 ;end v18=3;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v60) if (v1(v60,2)==79) then v20=v0(v3(v60,1,1));return "";else local v87=v2(v0(v60,16));if v20 then local v94=0;local v95;while true do if (v94==0) then v95=v5(v87,v20);v20=nil;v94=1;end if (v94==1) then return v95;end end else return v87;end end end);v18=1;end if (v18==7) then function v30(v61,v62,v63) local v64=v61[1];local v65=v61[2];local v66=v61[3];return function(...) local v69=v64;local v70=v65;local v71=v66;local v72=v28;local v73=1;local v74= -1;local v75={};local v76={...};local v77=v12("#",...) -1 ;local v78={};local v79={};for v88=0,v77 do if (v88>=v71) then v75[v88-v71 ]=v76[v88 + 1 ];else v79[v88]=v76[v88 + 1 ];end end local v80=(v77-v71) + 1 ;local v81;local v82;while true do local v89=0;while true do if (v89==1) then if (v82<=30) then if (v82<=14) then if (v82<=6) then if (v82<=2) then if (v82<=0) then local v112=0;local v113;local v114;while true do if (v112==0) then v113=v81[2];v114=v79[v81[3]];v112=1;end if (v112==1) then v79[v113 + 1 ]=v114;v79[v113]=v114[v81[4]];break;end end elseif (v82>1) then for v247=v81[2],v81[3] do v79[v247]=nil;end else local v115=0;local v116;while true do if (v115==0) then v116=v81[2];v79[v116](v13(v79,v116 + 1 ,v74));break;end end end elseif (v82<=4) then if (v82==3) then v79[v81[2]]=v30(v70[v81[3]],nil,v63);else v79[v81[2]]=v63[v81[3]];end elseif (v82>5) then if v79[v81[2]] then v73=v73 + 1 ;else v73=v81[3];end else local v120=v81[2];v79[v120]=v79[v120]();end elseif (v82<=10) then if (v82<=8) then if (v82>7) then v63[v81[3]]=v79[v81[2]];else local v124=0;local v125;while true do if (v124==0) then v125=v81[2];v79[v125](v13(v79,v125 + 1 ,v74));break;end end end elseif (v82>9) then local v126=v81[2];v79[v126]=v79[v126](v79[v126 + 1 ]);else v79[v81[2]][v81[3]]=v81[4];end elseif (v82<=12) then if (v82==11) then if (v81[2]==v79[v81[4]]) then v73=v73 + 1 ;else v73=v81[3];end else local v130=0;local v131;local v132;local v133;local v134;while true do if (v130==2) then for v296=v131,v74 do v134=v134 + 1 ;v79[v296]=v132[v134];end break;end if (1==v130) then v74=(v133 + v131) -1 ;v134=0;v130=2;end if (v130==0) then v131=v81[2];v132,v133=v72(v79[v131](v13(v79,v131 + 1 ,v81[3])));v130=1;end end end elseif (v82>13) then local v135=v81[2];local v136={v79[v135](v79[v135 + 1 ])};local v137=0;for v249=v135,v81[4] do v137=v137 + 1 ;v79[v249]=v136[v137];end else v73=v81[3];end elseif (v82<=22) then if (v82<=18) then if (v82<=16) then if (v82>15) then v79[v81[2]]=v81[3]~=0 ;else v79[v81[2]]=v30(v70[v81[3]],nil,v63);end elseif (v82==17) then v79[v81[2]]=v79[v81[3]][v79[v81[4]]];elseif (v79[v81[2]]==v81[4]) then v73=v73 + 1 ;else v73=v81[3];end elseif (v82<=20) then if (v82>19) then if (v79[v81[2]]==v81[4]) then v73=v73 + 1 ;else v73=v81[3];end else local v143=0;local v144;local v145;local v146;local v147;while true do if (v143==0) then v144=v81[2];v145,v146=v72(v79[v144](v79[v144 + 1 ]));v143=1;end if (v143==1) then v74=(v146 + v144) -1 ;v147=0;v143=2;end if (v143==2) then for v299=v144,v74 do local v300=0;while true do if (v300==0) then v147=v147 + 1 ;v79[v299]=v145[v147];break;end end end break;end end end elseif (v82==21) then local v148=v81[2];local v149,v150=v72(v79[v148](v79[v148 + 1 ]));v74=(v150 + v148) -1 ;local v151=0;for v252=v148,v74 do local v253=0;while true do if (0==v253) then v151=v151 + 1 ;v79[v252]=v149[v151];break;end end end else local v152=v81[2];v79[v152]=v79[v152](v79[v152 + 1 ]);end elseif (v82<=26) then if (v82<=24) then if (v82>23) then v79[v81[2]]=v81[3];else local v156=v81[2];v79[v156]=v79[v156](v13(v79,v156 + 1 ,v81[3]));end elseif (v82>25) then v79[v81[2]]=v79[v81[3]][v79[v81[4]]];else do return;end end elseif (v82<=28) then if (v82==27) then local v160=v81[2];v79[v160]=v79[v160](v13(v79,v160 + 1 ,v74));else v79[v81[2]]=v63[v81[3]];end elseif (v82==29) then local v164=v81[3];local v165=v79[v164];for v254=v164 + 1 ,v81[4] do v165=v165   .. v79[v254] ;end v79[v81[2]]=v165;else local v167=0;local v168;while true do if (0==v167) then v168=v81[2];v79[v168](v79[v168 + 1 ]);break;end end end elseif (v82<=46) then if (v82<=38) then if (v82<=34) then if (v82<=32) then if (v82==31) then do return;end else local v169=v81[2];local v170=v79[v169];for v255=v169 + 1 ,v81[3] do v7(v170,v79[v255]);end end elseif (v82==33) then v79[v81[2]]=v79[v81[3]][v81[4]];else v79[v81[2]]=v81[3];end elseif (v82<=36) then if (v82>35) then local v175=0;local v176;local v177;local v178;while true do if (v175==0) then v176=v81[2];v177=v79[v176];v175=1;end if (v175==1) then v178=v81[3];for v303=1,v178 do v177[v303]=v79[v176 + v303 ];end break;end end else v79[v81[2]]=v81[3]~=0 ;end elseif (v82>37) then v79[v81[2]]=v79[v81[3]][v81[4]];else local v182=v81[2];local v183=v79[v81[3]];v79[v182 + 1 ]=v183;v79[v182]=v183[v81[4]];end elseif (v82<=42) then if (v82<=40) then if (v82==39) then local v187=v81[2];local v188=v81[4];local v189=v187 + 2 ;local v190={v79[v187](v79[v187 + 1 ],v79[v189])};for v256=1,v188 do v79[v189 + v256 ]=v190[v256];end local v191=v190[1];if v191 then v79[v189]=v191;v73=v81[3];else v73=v73 + 1 ;end else local v192=0;local v193;while true do if (v192==0) then v193=v81[2];v79[v193]=v79[v193](v13(v79,v193 + 1 ,v81[3]));break;end end end elseif (v82==41) then v79[v81[2]]=v79[v81[3]];else local v196=0;local v197;while true do if (v196==0) then v197=v81[2];v79[v197](v13(v79,v197 + 1 ,v81[3]));break;end end end elseif (v82<=44) then if (v82>43) then local v198=v81[3];local v199=v79[v198];for v259=v198 + 1 ,v81[4] do v199=v199   .. v79[v259] ;end v79[v81[2]]=v199;else local v201=v81[2];local v202,v203=v72(v79[v201](v13(v79,v201 + 1 ,v81[3])));v74=(v203 + v201) -1 ;local v204=0;for v260=v201,v74 do v204=v204 + 1 ;v79[v260]=v202[v204];end end elseif (v82>45) then for v263=v81[2],v81[3] do v79[v263]=nil;end else v79[v81[2]][v81[3]]=v79[v81[4]];end elseif (v82<=54) then if (v82<=50) then if (v82<=48) then if (v82>47) then v79[v81[2]][v81[3]]=v79[v81[4]];else local v209=v81[2];v79[v209](v79[v209 + 1 ]);end elseif (v82>49) then v79[v81[2]]={};else local v211=0;local v212;local v213;local v214;while true do if (v211==1) then v214=v81[3];for v306=1,v214 do v213[v306]=v79[v212 + v306 ];end break;end if (v211==0) then v212=v81[2];v213=v79[v212];v211=1;end end end elseif (v82<=52) then if (v82==51) then v79[v81[2]][v81[3]]=v81[4];else local v217=v81[2];local v218={v79[v217](v79[v217 + 1 ])};local v219=0;for v265=v217,v81[4] do v219=v219 + 1 ;v79[v265]=v218[v219];end end elseif (v82>53) then local v220=v81[2];v79[v220]=v79[v220]();else local v222=v81[2];v79[v222]=v79[v222](v13(v79,v222 + 1 ,v74));end elseif (v82<=58) then if (v82<=56) then if (v82>55) then if v79[v81[2]] then v73=v73 + 1 ;else v73=v81[3];end elseif (v81[2]==v79[v81[4]]) then v73=v73 + 1 ;else v73=v81[3];end elseif (v82==57) then local v224=v81[2];local v225=v81[4];local v226=v224 + 2 ;local v227={v79[v224](v79[v224 + 1 ],v79[v226])};for v268=1,v225 do v79[v226 + v268 ]=v227[v268];end local v228=v227[1];if v228 then v79[v226]=v228;v73=v81[3];else v73=v73 + 1 ;end else v73=v81[3];end elseif (v82<=60) then if (v82>59) then v79[v81[2]]=v79[v81[3]];else v79[v81[2]]={};end elseif (v82>61) then local v233=v81[2];v79[v233](v13(v79,v233 + 1 ,v81[3]));else v63[v81[3]]=v79[v81[2]];end v73=v73 + 1 ;break;end if (v89==0) then v81=v69[v73];v82=v81[1];v89=1;end end end end;end return v30(v29(),{},v17)(...);end end end return v15("LOL!",v9(),...);
